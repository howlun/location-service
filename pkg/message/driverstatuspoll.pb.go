// Code generated by protoc-gen-go. DO NOT EDIT.
// source: driverstatuspoll.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DriverStatusPoll_DriverStatus int32

const (
	DriverStatusPoll_AVAILABLE    DriverStatusPoll_DriverStatus = 0
	DriverStatusPoll_NOTAVAILABLE DriverStatusPoll_DriverStatus = 1
	DriverStatusPoll_BUSY         DriverStatusPoll_DriverStatus = 2
)

var DriverStatusPoll_DriverStatus_name = map[int32]string{
	0: "AVAILABLE",
	1: "NOTAVAILABLE",
	2: "BUSY",
}

var DriverStatusPoll_DriverStatus_value = map[string]int32{
	"AVAILABLE":    0,
	"NOTAVAILABLE": 1,
	"BUSY":         2,
}

func (x DriverStatusPoll_DriverStatus) String() string {
	return proto.EnumName(DriverStatusPoll_DriverStatus_name, int32(x))
}

func (DriverStatusPoll_DriverStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4499c9bd31e3d701, []int{0, 0}
}

type DriverStatusPoll struct {
	Fleet                string                        `protobuf:"bytes,1,opt,name=fleet,proto3" json:"fleet,omitempty"`
	DriverId             int32                         `protobuf:"varint,2,opt,name=driverId,proto3" json:"driverId,omitempty"`
	ProviderId           int32                         `protobuf:"varint,3,opt,name=providerId,proto3" json:"providerId,omitempty"`
	Lat                  float32                       `protobuf:"fixed32,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng                  float32                       `protobuf:"fixed32,5,opt,name=lng,proto3" json:"lng,omitempty"`
	Status               DriverStatusPoll_DriverStatus `protobuf:"varint,6,opt,name=status,proto3,enum=message.DriverStatusPoll_DriverStatus" json:"status,omitempty"`
	JobId                int64                         `protobuf:"varint,7,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Timestamp            int64                         `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *DriverStatusPoll) Reset()         { *m = DriverStatusPoll{} }
func (m *DriverStatusPoll) String() string { return proto.CompactTextString(m) }
func (*DriverStatusPoll) ProtoMessage()    {}
func (*DriverStatusPoll) Descriptor() ([]byte, []int) {
	return fileDescriptor_4499c9bd31e3d701, []int{0}
}

func (m *DriverStatusPoll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriverStatusPoll.Unmarshal(m, b)
}
func (m *DriverStatusPoll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriverStatusPoll.Marshal(b, m, deterministic)
}
func (m *DriverStatusPoll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriverStatusPoll.Merge(m, src)
}
func (m *DriverStatusPoll) XXX_Size() int {
	return xxx_messageInfo_DriverStatusPoll.Size(m)
}
func (m *DriverStatusPoll) XXX_DiscardUnknown() {
	xxx_messageInfo_DriverStatusPoll.DiscardUnknown(m)
}

var xxx_messageInfo_DriverStatusPoll proto.InternalMessageInfo

func (m *DriverStatusPoll) GetFleet() string {
	if m != nil {
		return m.Fleet
	}
	return ""
}

func (m *DriverStatusPoll) GetDriverId() int32 {
	if m != nil {
		return m.DriverId
	}
	return 0
}

func (m *DriverStatusPoll) GetProviderId() int32 {
	if m != nil {
		return m.ProviderId
	}
	return 0
}

func (m *DriverStatusPoll) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *DriverStatusPoll) GetLng() float32 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *DriverStatusPoll) GetStatus() DriverStatusPoll_DriverStatus {
	if m != nil {
		return m.Status
	}
	return DriverStatusPoll_AVAILABLE
}

func (m *DriverStatusPoll) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *DriverStatusPoll) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterEnum("message.DriverStatusPoll_DriverStatus", DriverStatusPoll_DriverStatus_name, DriverStatusPoll_DriverStatus_value)
	proto.RegisterType((*DriverStatusPoll)(nil), "message.DriverStatusPoll")
}

func init() { proto.RegisterFile("driverstatuspoll.proto", fileDescriptor_4499c9bd31e3d701) }

var fileDescriptor_4499c9bd31e3d701 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x4d, 0xbb, 0x76, 0xed, 0x63, 0x4a, 0x78, 0x88, 0x04, 0x11, 0x09, 0x3b, 0x48, 0x4e,
	0x3d, 0xe8, 0xc9, 0x8b, 0xd0, 0xa1, 0x87, 0xc2, 0x50, 0xc9, 0x54, 0xf0, 0xd8, 0xd1, 0x58, 0x2a,
	0xe9, 0x52, 0x9a, 0xb8, 0xaf, 0xe6, 0xd7, 0x93, 0xa5, 0xc5, 0x4d, 0x6f, 0xf9, 0xff, 0xfe, 0x2f,
	0x8f, 0x1f, 0x0f, 0xce, 0xaa, 0xbe, 0xd9, 0xaa, 0xde, 0xba, 0xd2, 0x7d, 0xd9, 0xce, 0x68, 0x9d,
	0x75, 0xbd, 0x71, 0x06, 0xa7, 0xad, 0xb2, 0xb6, 0xac, 0xd5, 0xfc, 0x3b, 0x00, 0x7a, 0xef, 0x67,
	0x56, 0x7e, 0xe6, 0xd9, 0x68, 0x8d, 0xa7, 0x10, 0x7d, 0x68, 0xa5, 0x1c, 0x23, 0x9c, 0x88, 0x54,
	0x0e, 0x01, 0xcf, 0x21, 0x19, 0xb6, 0x15, 0x15, 0x0b, 0x38, 0x11, 0x91, 0xfc, 0xcd, 0x78, 0x09,
	0xd0, 0xf5, 0x66, 0xdb, 0x54, 0xbe, 0x0d, 0x7d, 0x7b, 0x40, 0x90, 0x42, 0xa8, 0x4b, 0xc7, 0x26,
	0x9c, 0x88, 0x40, 0xee, 0x9e, 0x9e, 0x6c, 0x6a, 0x16, 0x8d, 0x64, 0x53, 0xe3, 0x1d, 0xc4, 0x83,
	0x27, 0x8b, 0x39, 0x11, 0x27, 0xd7, 0x57, 0xd9, 0x28, 0x99, 0xfd, 0x17, 0xfc, 0x03, 0xe4, 0xf8,
	0x6b, 0x67, 0xfd, 0x69, 0xd6, 0x45, 0xc5, 0xa6, 0x9c, 0x88, 0x50, 0x0e, 0x01, 0x2f, 0x20, 0x75,
	0x4d, 0xab, 0xac, 0x2b, 0xdb, 0x8e, 0x25, 0xbe, 0xd9, 0x83, 0xf9, 0x2d, 0xcc, 0x0e, 0x77, 0xe1,
	0x31, 0xa4, 0xf9, 0x5b, 0x5e, 0x2c, 0xf3, 0xc5, 0xf2, 0x81, 0x1e, 0x21, 0x85, 0xd9, 0xe3, 0xd3,
	0xcb, 0x9e, 0x10, 0x4c, 0x60, 0xb2, 0x78, 0x5d, 0xbd, 0xd3, 0x60, 0x1d, 0xfb, 0x4b, 0xde, 0xfc,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x79, 0x33, 0x0c, 0x76, 0x63, 0x01, 0x00, 0x00,
}
